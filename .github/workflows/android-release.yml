name: Android Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag/version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build Release APK
      env:
        AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
        AZURE_STORAGE_CONTAINER: ${{ secrets.AZURE_STORAGE_CONTAINER }}
        AZURE_STORAGE_SAS_TOKEN: ${{ secrets.AZURE_STORAGE_SAS_TOKEN }}
      run: ./gradlew assembleRelease

    - name: Get version from tag
      id: get_version
      run: |
        if [ "${{ github.event_name }}" == "release" ]; then
          echo "VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "VERSION=${{ inputs.tag }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release APK (for tag push or manual dispatch)
      uses: actions/upload-release-asset@v1
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: mobile-network-reset-${{ steps.get_version.outputs.VERSION }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload Release APK (for release event)
      uses: actions/upload-release-asset@v1
      if: github.event_name == 'release'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: mobile-network-reset-${{ steps.get_version.outputs.VERSION }}.apk
        asset_content_type: application/vnd.android.package-archive
